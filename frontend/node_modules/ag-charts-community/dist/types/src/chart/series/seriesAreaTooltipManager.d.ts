import type { TypedEvent } from '../../util/observable';
import { BaseManager } from '../baseManager';
import type { ChartContext } from '../chartContext';
import { ChartUpdateType } from '../chartUpdateType';
import { Tooltip } from '../tooltip/tooltip';
import { type Series } from './series';
/** Manager that handles all top-down series-area tooltip related concerns and state. */
export declare class SeriesAreaTooltipManager extends BaseManager {
    private readonly id;
    private readonly chart;
    private readonly ctx;
    private readonly tooltip;
    private series;
    private hoverRect?;
    private lastHover?;
    constructor(id: string, chart: {
        performUpdateType: ChartUpdateType;
        fireEvent<TEvent extends TypedEvent>(event: TEvent): void;
    }, ctx: ChartContext, tooltip: Tooltip);
    seriesChanged(series: Series<any, any>[]): void;
    dataChanged(): void;
    preSceneRender(): void;
    private layoutComplete;
    private onHover;
    private clearTooltip;
    private readonly hoverScheduler;
    private handleHover;
}

import type { TypedEvent } from '../../util/observable';
import { BaseManager } from '../baseManager';
import type { ChartContext } from '../chartContext';
import type { ChartHighlight } from '../chartHighlight';
import { ChartUpdateType } from '../chartUpdateType';
import type { ChartOverlays } from '../overlay/chartOverlays';
import { Tooltip } from '../tooltip/tooltip';
import { type Series } from './series';
/** Manager that handles all top-down series-area related concerns and state. */
export declare class SeriesAreaManager extends BaseManager {
    private readonly ctx;
    readonly id: string;
    private series;
    private readonly subManagers;
    constructor(chart: {
        performUpdateType: ChartUpdateType;
        fireEvent<TEvent extends TypedEvent>(event: TEvent): void;
    }, ctx: ChartContext, chartType: 'cartesian' | 'polar' | 'hierarchy' | 'topology' | 'flow-proportion', tooltip: Tooltip, highlight: ChartHighlight, overlays: ChartOverlays);
    dataChanged(): void;
    private preSceneRender;
    seriesChanged(series: Series<any, any>[]): void;
    private onContextMenu;
}

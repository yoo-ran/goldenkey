import { BaseProperties } from '../../util/properties';
import { type ToolbarAlignment, type ToolbarButton, ToolbarPosition } from './toolbarTypes';
export interface ButtonConfiguration extends ToolbarButton {
    fill?: string;
}
export declare class ToolbarGroupProperties extends BaseProperties {
    private readonly onChange;
    private readonly onButtonsChange;
    enabled?: boolean;
    align: ToolbarAlignment;
    position: ToolbarPosition;
    size: 'small' | 'normal';
    protected buttons?: ButtonConfiguration[];
    private readonly buttonOverrides;
    constructor(onChange: (enabled: boolean | undefined) => void, onButtonsChange: (buttons: ButtonConfiguration[], configurationOnly: boolean) => void);
    buttonConfigurations(): ButtonConfiguration[];
    private buttonsChanged;
    overrideButtonConfiguration(id: string, options: Omit<ButtonConfiguration, 'value'>): void;
}
